"""Functions used for pretty printing Modelica code"""

from mofmt.collecting.collector import Marker

INDENT = "  "


def print_marker(marker: Marker, lvl: int) -> tuple[str, int]:
    """
    Return marker converted to string and updated indentation level.

    Parameters
    ----------
    marker : Marker
        Single marker produced in collector
    lvl : int
        Current indentation level

    Returns
    -------
    str
        String produced from marker
    int
        Updated indentation level
    """
    typ = marker.typ
    if typ == Marker.INDENT:
        lvl += 1
        return marker.val, lvl
    if typ == Marker.DEDENT:
        lvl -= 1
        return marker.val, lvl
    if typ >= Marker.BLANK:
        marker.val += lvl * INDENT
    return marker.val, lvl


def pretty_print(markers: list[Marker]) -> str:
    """
    Return formatted Modelica code as a string.

    Parameters
    ----------
    markers : list of TODO
        Markers generated by collector

    Returns
    -------
    str
        Pretty Modelica code
    """
    out = ""
    indent_lvl = 0
    for marker in markers:
        formatted, indent_lvl = print_marker(marker, indent_lvl)
        out += formatted
    return out
